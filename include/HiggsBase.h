//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Fri Mar 27 18:23:42 2009 by ROOT version 5.18/00a
// from TTree ntp1/ntp1
// found on file: rfio:///castor/cern.ch/user/e/emanuele/Higgs21X/H160_WW_2l/default_1.root
//////////////////////////////////////////////////////////

#ifndef HiggsBase_h
#define HiggsBase_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

class HiggsBase {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

   // Declaration of leaf types
   Int_t           runNumber;
   Int_t           eventNumber;
   Int_t           lumiBlock;
   Int_t           bunchCrossing;
   Int_t           orbitNumber;
   Int_t           nMc;
   Float_t         pMc[101];   //[nMc]
   Float_t         massMc[101];   //[nMc]
   Float_t         thetaMc[101];   //[nMc]
   Float_t         etaMc[101];   //[nMc]
   Float_t         phiMc[101];   //[nMc]
   Float_t         energyMc[101];   //[nMc]
   Int_t           idMc[101];   //[nMc]
   Int_t           mothMc[101];   //[nMc]
   Int_t           nDauMc[101];   //[nMc]
   Int_t           statusMc[101];   //[nMc]
   Float_t         xMc[101];   //[nMc]
   Float_t         yMc[101];   //[nMc]
   Float_t         zMc[101];   //[nMc]
   Int_t           nTrg;
   UChar_t         firedTrg[159];   //[nTrg]
   UChar_t         evtPresel;
   Double_t        evtKfactor;
   Int_t           nEle;
   Int_t           chargeEle[50];   //[nEle]
   Float_t         energyEle[50];   //[nEle]
   Float_t         etEle[50];   //[nEle]
   Float_t         momentumEle[50];   //[nEle]
   Float_t         thetaEle[50];   //[nEle]
   Float_t         etaEle[50];   //[nEle]
   Float_t         phiEle[50];   //[nEle]
   Float_t         pxEle[50];   //[nEle]
   Float_t         pyEle[50];   //[nEle]
   Float_t         pzEle[50];   //[nEle]
   Float_t         vertexXEle[50];   //[nEle]
   Float_t         vertexYEle[50];   //[nEle]
   Float_t         vertexZEle[50];   //[nEle]
   Float_t         massEle[50];   //[nEle]
   Float_t         mtEle[50];   //[nEle]
   Int_t           pdgIdEle[50];   //[nEle]
   Int_t           nDauEle[50];   //[nEle]
   Int_t           d1IndexEle[50];   //[nEle]
   Int_t           d2IndexEle[50];   //[nEle]
   Int_t           d1pdgIdEle[50];   //[nEle]
   Int_t           d2pdgIdEle[50];   //[nEle]
   Float_t         ecalEle[50];   //[nEle]
   Int_t           nCluEle[50];   //[nEle]
   Int_t           nCryEle[50];   //[nEle]
   Float_t         e3x3Ele[50];   //[nEle]
   Float_t         e5x5Ele[50];   //[nEle]
   Float_t         eMaxEle[50];   //[nEle]
   Float_t         latEle[50];   //[nEle]
   Float_t         phiLatEle[50];   //[nEle]
   Float_t         etaLatEle[50];   //[nEle]
   Float_t         erawEle[50];   //[nEle]
   Float_t         caloEtaEle[50];   //[nEle]
   Float_t         caloPhiEle[50];   //[nEle]
   Float_t         e2x2Ele[50];   //[nEle]
   Float_t         e2ndEle[50];   //[nEle]
   Float_t         s1s9Ele[50];   //[nEle]
   Float_t         s9s25Ele[50];   //[nEle]
   Float_t         covEtaEtaEle[50];   //[nEle]
   Float_t         covEtaPhiEle[50];   //[nEle]
   Float_t         covPhiPhiEle[50];   //[nEle]
   Float_t         covIEtaIEtaEle[50];   //[nEle]
   Float_t         covIEtaIPhiEle[50];   //[nEle]
   Float_t         covIPhiIPhiEle[50];   //[nEle]
   Float_t         a20Ele[50];   //[nEle]
   Float_t         a42Ele[50];   //[nEle]
   Float_t         eleTrackNormalizedChi2Ele[50];   //[nEle]
   Float_t         eleTrackDxyEle[50];   //[nEle]
   Float_t         eleTrackD0Ele[50];   //[nEle]
   Float_t         eleTrackDszEle[50];   //[nEle]
   Float_t         eleTrackDzEle[50];   //[nEle]
   Float_t         eleTrackDxyErrorEle[50];   //[nEle]
   Float_t         eleTrackD0ErrorEle[50];   //[nEle]
   Float_t         eleTrackDszErrorEle[50];   //[nEle]
   Float_t         eleTrackDzErrorEle[50];   //[nEle]
   Float_t         eleTrackValidHitsEle[50];   //[nEle]
   Float_t         eleTrackLostHitsEle[50];   //[nEle]
   Float_t         eleTrackVxEle[50];   //[nEle]
   Float_t         eleTrackVyEle[50];   //[nEle]
   Float_t         eleTrackVzEle[50];   //[nEle]
   Float_t         pxAtInnerEle[50];   //[nEle]
   Float_t         pyAtInnerEle[50];   //[nEle]
   Float_t         pzAtInnerEle[50];   //[nEle]
   Float_t         xAtInnerEle[50];   //[nEle]
   Float_t         yAtInnerEle[50];   //[nEle]
   Float_t         zAtInnerEle[50];   //[nEle]
   Float_t         pxAtOuterEle[50];   //[nEle]
   Float_t         pyAtOuterEle[50];   //[nEle]
   Float_t         pzAtOuterEle[50];   //[nEle]
   Float_t         xAtOuterEle[50];   //[nEle]
   Float_t         yAtOuterEle[50];   //[nEle]
   Float_t         zAtOuterEle[50];   //[nEle]
   Float_t         eleFullCorrEEle[50];   //[nEle]
   Float_t         eleCaloCorrEEle[50];   //[nEle]
   Float_t         eleNxtalCorrEEle[50];   //[nEle]
   Float_t         eleRawEEle[50];   //[nEle]
   Float_t         eleTrackerPEle[50];   //[nEle]
   Int_t           eleClassEle[50];   //[nEle]
   Int_t           eleStandardClassEle[50];   //[nEle]
   Float_t         eleHoEEle[50];   //[nEle]
   Float_t         eleCorrEoPEle[50];   //[nEle]
   Float_t         eleNotCorrEoPEle[50];   //[nEle]
   Float_t         eleCorrEoPoutEle[50];   //[nEle]
   Float_t         eleNotCorrEoPoutEle[50];   //[nEle]
   Float_t         eleDeltaEtaAtVtxEle[50];   //[nEle]
   Float_t         eleDeltaPhiAtVtxEle[50];   //[nEle]
   Float_t         eleDeltaEtaAtCaloEle[50];   //[nEle]
   Float_t         eleDeltaPhiAtCaloEle[50];   //[nEle]
   Float_t         eleMinDR03Ele[50];   //[nEle]
   Float_t         eleMinDRveto03Ele[50];   //[nEle]
   Float_t         eleSumPt03Ele[50];   //[nEle]
   Float_t         eleSumPtSquared03Ele[50];   //[nEle]
   Float_t         eleSumN03Ele[50];   //[nEle]
   Float_t         eleSumPt04Ele[50];   //[nEle]
   Float_t         eleSumPt05Ele[50];   //[nEle]
   Float_t         eleSumPtPreselectionEle[50];   //[nEle]
   Float_t         eleSumHadEt04Ele[50];   //[nEle]
   Float_t         eleSumEmEt04Ele[50];   //[nEle]
   Float_t         eleSumHadEt05Ele[50];   //[nEle]
   Float_t         eleSumEmEt05Ele[50];   //[nEle]
   Float_t         eleIsoFromDepsTkEle[50];   //[nEle]
   Float_t         eleIsoFromDepsEcalEle[50];   //[nEle]
   Float_t         eleIsoFromDepsHcalEle[50];   //[nEle]
   Float_t         eleScBasedEcalSum04Ele[50];   //[nEle]
   Float_t         eleScBasedEcalSum05Ele[50];   //[nEle]
   Float_t         eleScHaloBasedEcalSum04Ele[50];   //[nEle]
   Float_t         eleScHaloBasedEcalSum05Ele[50];   //[nEle]
   UChar_t         eleIdCutBasedEle[50];   //[nEle]
   Float_t         eleLikelihoodEle[50];   //[nEle]
   UChar_t         eleIdStandardCutsRobustEle[50];   //[nEle]
   UChar_t         eleIdStandardCutsLooseEle[50];   //[nEle]
   UChar_t         eleIdStandardCutsTightEle[50];   //[nEle]
   Float_t         eleTipEle[50];   //[nEle]
   Int_t           nTrack;
   Int_t           chargeTrack[500];   //[nTrack]
   Float_t         energyTrack[500];   //[nTrack]
   Float_t         etTrack[500];   //[nTrack]
   Float_t         momentumTrack[500];   //[nTrack]
   Float_t         thetaTrack[500];   //[nTrack]
   Float_t         etaTrack[500];   //[nTrack]
   Float_t         phiTrack[500];   //[nTrack]
   Float_t         pxTrack[500];   //[nTrack]
   Float_t         pyTrack[500];   //[nTrack]
   Float_t         pzTrack[500];   //[nTrack]
   Float_t         vertexXTrack[500];   //[nTrack]
   Float_t         vertexYTrack[500];   //[nTrack]
   Float_t         vertexZTrack[500];   //[nTrack]
   Float_t         massTrack[500];   //[nTrack]
   Float_t         mtTrack[500];   //[nTrack]
   Int_t           pdgIdTrack[500];   //[nTrack]
   Int_t           nDauTrack[500];   //[nTrack]
   Int_t           d1IndexTrack[500];   //[nTrack]
   Int_t           d2IndexTrack[500];   //[nTrack]
   Int_t           d1pdgIdTrack[500];   //[nTrack]
   Int_t           d2pdgIdTrack[500];   //[nTrack]
   Int_t           vtxIndexTrack[500];   //[nTrack]
   Float_t         vtxWeightTrack[500];   //[nTrack]
   Float_t         ptErrorTrack[500];   //[nTrack]
   Float_t         trackValidHitsTrack[500];   //[nTrack]
   Float_t         trackLostHitsTrack[500];   //[nTrack]
   Float_t         trackNormalizedChi2Track[500];   //[nTrack]
   Float_t         trackDxyTrack[500];   //[nTrack]
   Float_t         trackD0Track[500];   //[nTrack]
   Float_t         trackDszTrack[500];   //[nTrack]
   Float_t         trackDzTrack[500];   //[nTrack]
   Float_t         trackDxyErrorTrack[500];   //[nTrack]
   Float_t         trackD0ErrorTrack[500];   //[nTrack]
   Float_t         trackDszErrorTrack[500];   //[nTrack]
   Float_t         trackDzErrorTrack[500];   //[nTrack]
   Float_t         trackDxyPVTrack[500];   //[nTrack]
   Float_t         trackDszPVTrack[500];   //[nTrack]
   Float_t         trackDzPVTrack[500];   //[nTrack]
   Float_t         trackVxTrack[500];   //[nTrack]
   Float_t         trackVyTrack[500];   //[nTrack]
   Float_t         trackVzTrack[500];   //[nTrack]
   Float_t         pxAtOuterTrack[500];   //[nTrack]
   Float_t         pyAtOuterTrack[500];   //[nTrack]
   Float_t         pzAtOuterTrack[500];   //[nTrack]
   Float_t         xAtOuterTrack[500];   //[nTrack]
   Float_t         yAtOuterTrack[500];   //[nTrack]
   Float_t         zAtOuterTrack[500];   //[nTrack]
   Float_t         pxAtInnerTrack[500];   //[nTrack]
   Float_t         pyAtInnerTrack[500];   //[nTrack]
   Float_t         pzAtInnerTrack[500];   //[nTrack]
   Float_t         xAtInnerTrack[500];   //[nTrack]
   Float_t         yAtInnerTrack[500];   //[nTrack]
   Float_t         zAtInnerTrack[500];   //[nTrack]
   Float_t         recHitsSizeTrack[500];   //[nTrack]
   Int_t           nPV;
   Float_t         PVxPV[10];   //[nPV]
   Float_t         PVyPV[10];   //[nPV]
   Float_t         PVzPV[10];   //[nPV]
   Float_t         PVErrxPV[10];   //[nPV]
   Float_t         PVErryPV[10];   //[nPV]
   Float_t         PVErrzPV[10];   //[nPV]
   Float_t         SumPtPV[10];   //[nPV]
   Float_t         ndofPV[10];   //[nPV]
   Float_t         chi2PV[10];   //[nPV]
   Int_t           nMuon;
   Int_t           chargeMuon[50];   //[nMuon]
   Float_t         energyMuon[50];   //[nMuon]
   Float_t         etMuon[50];   //[nMuon]
   Float_t         momentumMuon[50];   //[nMuon]
   Float_t         thetaMuon[50];   //[nMuon]
   Float_t         etaMuon[50];   //[nMuon]
   Float_t         phiMuon[50];   //[nMuon]
   Float_t         pxMuon[50];   //[nMuon]
   Float_t         pyMuon[50];   //[nMuon]
   Float_t         pzMuon[50];   //[nMuon]
   Float_t         vertexXMuon[50];   //[nMuon]
   Float_t         vertexYMuon[50];   //[nMuon]
   Float_t         vertexZMuon[50];   //[nMuon]
   Float_t         massMuon[50];   //[nMuon]
   Float_t         mtMuon[50];   //[nMuon]
   Int_t           pdgIdMuon[50];   //[nMuon]
   Int_t           nDauMuon[50];   //[nMuon]
   Int_t           d1IndexMuon[50];   //[nMuon]
   Int_t           d2IndexMuon[50];   //[nMuon]
   Int_t           d1pdgIdMuon[50];   //[nMuon]
   Int_t           d2pdgIdMuon[50];   //[nMuon]
   Int_t           nMet;
   Int_t           chargeMet[1];   //[nMet]
   Float_t         energyMet[1];   //[nMet]
   Float_t         etMet[1];   //[nMet]
   Float_t         momentumMet[1];   //[nMet]
   Float_t         thetaMet[1];   //[nMet]
   Float_t         etaMet[1];   //[nMet]
   Float_t         phiMet[1];   //[nMet]
   Float_t         pxMet[1];   //[nMet]
   Float_t         pyMet[1];   //[nMet]
   Float_t         pzMet[1];   //[nMet]
   Float_t         vertexXMet[1];   //[nMet]
   Float_t         vertexYMet[1];   //[nMet]
   Float_t         vertexZMet[1];   //[nMet]
   Float_t         massMet[1];   //[nMet]
   Float_t         mtMet[1];   //[nMet]
   Int_t           pdgIdMet[1];   //[nMet]
   Int_t           nDauMet[1];   //[nMet]
   Int_t           d1IndexMet[1];   //[nMet]
   Int_t           d2IndexMet[1];   //[nMet]
   Int_t           d1pdgIdMet[1];   //[nMet]
   Int_t           d2pdgIdMet[1];   //[nMet]
   Int_t           nPFMet;
   Int_t           chargePFMet[1];   //[nPFMet]
   Float_t         energyPFMet[1];   //[nPFMet]
   Float_t         etPFMet[1];   //[nPFMet]
   Float_t         momentumPFMet[1];   //[nPFMet]
   Float_t         thetaPFMet[1];   //[nPFMet]
   Float_t         etaPFMet[1];   //[nPFMet]
   Float_t         phiPFMet[1];   //[nPFMet]
   Float_t         pxPFMet[1];   //[nPFMet]
   Float_t         pyPFMet[1];   //[nPFMet]
   Float_t         pzPFMet[1];   //[nPFMet]
   Float_t         vertexXPFMet[1];   //[nPFMet]
   Float_t         vertexYPFMet[1];   //[nPFMet]
   Float_t         vertexZPFMet[1];   //[nPFMet]
   Float_t         massPFMet[1];   //[nPFMet]
   Float_t         mtPFMet[1];   //[nPFMet]
   Int_t           pdgIdPFMet[1];   //[nPFMet]
   Int_t           nDauPFMet[1];   //[nPFMet]
   Int_t           d1IndexPFMet[1];   //[nPFMet]
   Int_t           d2IndexPFMet[1];   //[nPFMet]
   Int_t           d1pdgIdPFMet[1];   //[nPFMet]
   Int_t           d2pdgIdPFMet[1];   //[nPFMet]
   Int_t           nGenMet;
   Int_t           chargeGenMet[1];   //[nGenMet]
   Float_t         energyGenMet[1];   //[nGenMet]
   Float_t         etGenMet[1];   //[nGenMet]
   Float_t         momentumGenMet[1];   //[nGenMet]
   Float_t         thetaGenMet[1];   //[nGenMet]
   Float_t         etaGenMet[1];   //[nGenMet]
   Float_t         phiGenMet[1];   //[nGenMet]
   Float_t         pxGenMet[1];   //[nGenMet]
   Float_t         pyGenMet[1];   //[nGenMet]
   Float_t         pzGenMet[1];   //[nGenMet]
   Float_t         vertexXGenMet[1];   //[nGenMet]
   Float_t         vertexYGenMet[1];   //[nGenMet]
   Float_t         vertexZGenMet[1];   //[nGenMet]
   Float_t         massGenMet[1];   //[nGenMet]
   Float_t         mtGenMet[1];   //[nGenMet]
   Int_t           pdgIdGenMet[1];   //[nGenMet]
   Int_t           nDauGenMet[1];   //[nGenMet]
   Int_t           d1IndexGenMet[1];   //[nGenMet]
   Int_t           d2IndexGenMet[1];   //[nGenMet]
   Int_t           d1pdgIdGenMet[1];   //[nGenMet]
   Int_t           d2pdgIdGenMet[1];   //[nGenMet]
   Int_t           nSisConeCorrJet;
   Int_t           chargeSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         energySisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         etSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         momentumSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         thetaSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         etaSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         phiSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         pxSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         pySisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         pzSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         vertexXSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         vertexYSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         vertexZSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         massSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         mtSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           pdgIdSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           nDauSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           d1IndexSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           d2IndexSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           d1pdgIdSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           d2pdgIdSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         alphaSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         emFracSisConeCorrJet[500];   //[nSisConeCorrJet]
   Float_t         hadFracSisConeCorrJet[500];   //[nSisConeCorrJet]
   Int_t           nSisConeJet;
   Int_t           chargeSisConeJet[500];   //[nSisConeJet]
   Float_t         energySisConeJet[500];   //[nSisConeJet]
   Float_t         etSisConeJet[500];   //[nSisConeJet]
   Float_t         momentumSisConeJet[500];   //[nSisConeJet]
   Float_t         thetaSisConeJet[500];   //[nSisConeJet]
   Float_t         etaSisConeJet[500];   //[nSisConeJet]
   Float_t         phiSisConeJet[500];   //[nSisConeJet]
   Float_t         pxSisConeJet[500];   //[nSisConeJet]
   Float_t         pySisConeJet[500];   //[nSisConeJet]
   Float_t         pzSisConeJet[500];   //[nSisConeJet]
   Float_t         vertexXSisConeJet[500];   //[nSisConeJet]
   Float_t         vertexYSisConeJet[500];   //[nSisConeJet]
   Float_t         vertexZSisConeJet[500];   //[nSisConeJet]
   Float_t         massSisConeJet[500];   //[nSisConeJet]
   Float_t         mtSisConeJet[500];   //[nSisConeJet]
   Int_t           pdgIdSisConeJet[500];   //[nSisConeJet]
   Int_t           nDauSisConeJet[500];   //[nSisConeJet]
   Int_t           d1IndexSisConeJet[500];   //[nSisConeJet]
   Int_t           d2IndexSisConeJet[500];   //[nSisConeJet]
   Int_t           d1pdgIdSisConeJet[500];   //[nSisConeJet]
   Int_t           d2pdgIdSisConeJet[500];   //[nSisConeJet]
   Float_t         alphaSisConeJet[500];   //[nSisConeJet]
   Float_t         emFracSisConeJet[500];   //[nSisConeJet]
   Float_t         hadFracSisConeJet[500];   //[nSisConeJet]
   Int_t           nSisConePFJet;
   Int_t           chargeSisConePFJet[500];   //[nSisConePFJet]
   Float_t         energySisConePFJet[500];   //[nSisConePFJet]
   Float_t         etSisConePFJet[500];   //[nSisConePFJet]
   Float_t         momentumSisConePFJet[500];   //[nSisConePFJet]
   Float_t         thetaSisConePFJet[500];   //[nSisConePFJet]
   Float_t         etaSisConePFJet[500];   //[nSisConePFJet]
   Float_t         phiSisConePFJet[500];   //[nSisConePFJet]
   Float_t         pxSisConePFJet[500];   //[nSisConePFJet]
   Float_t         pySisConePFJet[500];   //[nSisConePFJet]
   Float_t         pzSisConePFJet[500];   //[nSisConePFJet]
   Float_t         vertexXSisConePFJet[500];   //[nSisConePFJet]
   Float_t         vertexYSisConePFJet[500];   //[nSisConePFJet]
   Float_t         vertexZSisConePFJet[500];   //[nSisConePFJet]
   Float_t         massSisConePFJet[500];   //[nSisConePFJet]
   Float_t         mtSisConePFJet[500];   //[nSisConePFJet]
   Int_t           pdgIdSisConePFJet[500];   //[nSisConePFJet]
   Int_t           nDauSisConePFJet[500];   //[nSisConePFJet]
   Int_t           d1IndexSisConePFJet[500];   //[nSisConePFJet]
   Int_t           d2IndexSisConePFJet[500];   //[nSisConePFJet]
   Int_t           d1pdgIdSisConePFJet[500];   //[nSisConePFJet]
   Int_t           d2pdgIdSisConePFJet[500];   //[nSisConePFJet]
   Float_t         chargedHadronEnergySisConePFJet[500];   //[nSisConePFJet]
   Float_t         neutralHadronEnergySisConePFJet[500];   //[nSisConePFJet]
   Float_t         chargedEmEnergySisConePFJet[500];   //[nSisConePFJet]
   Float_t         neutralEmEnergySisConePFJet[500];   //[nSisConePFJet]
   Float_t         neutralMultiplicitySisConePFJet[500];   //[nSisConePFJet]
   Float_t         chargedMultiplicitySisConePFJet[500];   //[nSisConePFJet]
   Float_t         muonMultiplicitySisConePFJet[500];   //[nSisConePFJet]
   Int_t           nSisConePFCorrJet;
   Int_t           chargeSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         energySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         etSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         momentumSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         thetaSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         etaSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         phiSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         pxSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         pySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         pzSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         vertexXSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         vertexYSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         vertexZSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         massSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         mtSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           pdgIdSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           nDauSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           d1IndexSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           d2IndexSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           d1pdgIdSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           d2pdgIdSisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         chargedHadronEnergySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         neutralHadronEnergySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         chargedEmEnergySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         neutralEmEnergySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         neutralMultiplicitySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         chargedMultiplicitySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Float_t         muonMultiplicitySisConePFCorrJet[500];   //[nSisConePFCorrJet]
   Int_t           nSisConeGenJet;
   Int_t           chargeSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         energySisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         etSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         momentumSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         thetaSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         etaSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         phiSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         pxSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         pySisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         pzSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         vertexXSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         vertexYSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         vertexZSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         massSisConeGenJet[500];   //[nSisConeGenJet]
   Float_t         mtSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           pdgIdSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           nDauSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           d1IndexSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           d2IndexSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           d1pdgIdSisConeGenJet[500];   //[nSisConeGenJet]
   Int_t           d2pdgIdSisConeGenJet[500];   //[nSisConeGenJet]

   // List of branches
   TBranch        *b_runNumber;   //!
   TBranch        *b_eventNumber;   //!
   TBranch        *b_lumiBlock;   //!
   TBranch        *b_bunchCrossing;   //!
   TBranch        *b_orbitNumber;   //!
   TBranch        *b_nMc;   //!
   TBranch        *b_pMc;   //!
   TBranch        *b_massMc;   //!
   TBranch        *b_thetaMc;   //!
   TBranch        *b_etaMc;   //!
   TBranch        *b_phiMc;   //!
   TBranch        *b_energyMc;   //!
   TBranch        *b_idMc;   //!
   TBranch        *b_mothMc;   //!
   TBranch        *b_nDauMc;   //!
   TBranch        *b_statusMc;   //!
   TBranch        *b_xMc;   //!
   TBranch        *b_yMc;   //!
   TBranch        *b_zMc;   //!
   TBranch        *b_nTrg;   //!
   TBranch        *b_firedTrg;   //!
   TBranch        *b_evtPresel;   //!
   TBranch        *b_evtKfactor;   //!
   TBranch        *b_nEle;   //!
   TBranch        *b_chargeEle;   //!
   TBranch        *b_energyEle;   //!
   TBranch        *b_etEle;   //!
   TBranch        *b_momentumEle;   //!
   TBranch        *b_thetaEle;   //!
   TBranch        *b_etaEle;   //!
   TBranch        *b_phiEle;   //!
   TBranch        *b_pxEle;   //!
   TBranch        *b_pyEle;   //!
   TBranch        *b_pzEle;   //!
   TBranch        *b_vertexXEle;   //!
   TBranch        *b_vertexYEle;   //!
   TBranch        *b_vertexZEle;   //!
   TBranch        *b_massEle;   //!
   TBranch        *b_mtEle;   //!
   TBranch        *b_pdgIdEle;   //!
   TBranch        *b_nDauEle;   //!
   TBranch        *b_d1IndexEle;   //!
   TBranch        *b_d2IndexEle;   //!
   TBranch        *b_d1pdgIdEle;   //!
   TBranch        *b_d2pdgIdEle;   //!
   TBranch        *b_ecalEle;   //!
   TBranch        *b_nCluEle;   //!
   TBranch        *b_nCryEle;   //!
   TBranch        *b_e3x3Ele;   //!
   TBranch        *b_e5x5Ele;   //!
   TBranch        *b_eMaxEle;   //!
   TBranch        *b_latEle;   //!
   TBranch        *b_phiLatEle;   //!
   TBranch        *b_etaLatEle;   //!
   TBranch        *b_erawEle;   //!
   TBranch        *b_caloEtaEle;   //!
   TBranch        *b_caloPhiEle;   //!
   TBranch        *b_e2x2Ele;   //!
   TBranch        *b_e2ndEle;   //!
   TBranch        *b_s1s9Ele;   //!
   TBranch        *b_s9s25Ele;   //!
   TBranch        *b_covEtaEtaEle;   //!
   TBranch        *b_covEtaPhiEle;   //!
   TBranch        *b_covPhiPhiEle;   //!
   TBranch        *b_covIEtaIEtaEle;   //!
   TBranch        *b_covIEtaIPhiEle;   //!
   TBranch        *b_covIPhiIPhiEle;   //!
   TBranch        *b_a20Ele;   //!
   TBranch        *b_a42Ele;   //!
   TBranch        *b_eleTrackNormalizedChi2Ele;   //!
   TBranch        *b_eleTrackDxyEle;   //!
   TBranch        *b_eleTrackD0Ele;   //!
   TBranch        *b_eleTrackDszEle;   //!
   TBranch        *b_eleTrackDzEle;   //!
   TBranch        *b_eleTrackDxyErrorEle;   //!
   TBranch        *b_eleTrackD0ErrorEle;   //!
   TBranch        *b_eleTrackDszErrorEle;   //!
   TBranch        *b_eleTrackDzErrorEle;   //!
   TBranch        *b_eleTrackValidHitsEle;   //!
   TBranch        *b_eleTrackLostHitsEle;   //!
   TBranch        *b_eleTrackVxEle;   //!
   TBranch        *b_eleTrackVyEle;   //!
   TBranch        *b_eleTrackVzEle;   //!
   TBranch        *b_pxAtInnerEle;   //!
   TBranch        *b_pyAtInnerEle;   //!
   TBranch        *b_pzAtInnerEle;   //!
   TBranch        *b_xAtInnerEle;   //!
   TBranch        *b_yAtInnerEle;   //!
   TBranch        *b_zAtInnerEle;   //!
   TBranch        *b_pxAtOuterEle;   //!
   TBranch        *b_pyAtOuterEle;   //!
   TBranch        *b_pzAtOuterEle;   //!
   TBranch        *b_xAtOuterEle;   //!
   TBranch        *b_yAtOuterEle;   //!
   TBranch        *b_zAtOuterEle;   //!
   TBranch        *b_eleFullCorrEEle;   //!
   TBranch        *b_eleCaloCorrEEle;   //!
   TBranch        *b_eleNxtalCorrEEle;   //!
   TBranch        *b_eleRawEEle;   //!
   TBranch        *b_eleTrackerPEle;   //!
   TBranch        *b_eleClassEle;   //!
   TBranch        *b_eleStandardClassEle;   //!
   TBranch        *b_eleHoEEle;   //!
   TBranch        *b_eleCorrEoPEle;   //!
   TBranch        *b_eleNotCorrEoPEle;   //!
   TBranch        *b_eleCorrEoPoutEle;   //!
   TBranch        *b_eleNotCorrEoPoutEle;   //!
   TBranch        *b_eleDeltaEtaAtVtxEle;   //!
   TBranch        *b_eleDeltaPhiAtVtxEle;   //!
   TBranch        *b_eleDeltaEtaAtCaloEle;   //!
   TBranch        *b_eleDeltaPhiAtCaloEle;   //!
   TBranch        *b_eleMinDR03Ele;   //!
   TBranch        *b_eleMinDRveto03Ele;   //!
   TBranch        *b_eleSumPt03Ele;   //!
   TBranch        *b_eleSumPtSquared03Ele;   //!
   TBranch        *b_eleSumN03Ele;   //!
   TBranch        *b_eleSumPt04Ele;   //!
   TBranch        *b_eleSumPt05Ele;   //!
   TBranch        *b_eleSumPtPreselectionEle;   //!
   TBranch        *b_eleSumHadEt04Ele;   //!
   TBranch        *b_eleSumEmEt04Ele;   //!
   TBranch        *b_eleSumHadEt05Ele;   //!
   TBranch        *b_eleSumEmEt05Ele;   //!
   TBranch        *b_eleIsoFromDepsTkEle;   //!
   TBranch        *b_eleIsoFromDepsEcalEle;   //!
   TBranch        *b_eleIsoFromDepsHcalEle;   //!
   TBranch        *b_eleScBasedEcalSum04Ele;   //!
   TBranch        *b_eleScBasedEcalSum05Ele;   //!
   TBranch        *b_eleScHaloBasedEcalSum04Ele;   //!
   TBranch        *b_eleScHaloBasedEcalSum05Ele;   //!
   TBranch        *b_eleIdCutBasedEle;   //!
   TBranch        *b_eleLikelihoodEle;   //!
   TBranch        *b_eleIdStandardCutsRobustEle;   //!
   TBranch        *b_eleIdStandardCutsLooseEle;   //!
   TBranch        *b_eleIdStandardCutsTightEle;   //!
   TBranch        *b_eleTipEle;   //!
   TBranch        *b_nTrack;   //!
   TBranch        *b_chargeTrack;   //!
   TBranch        *b_energyTrack;   //!
   TBranch        *b_etTrack;   //!
   TBranch        *b_momentumTrack;   //!
   TBranch        *b_thetaTrack;   //!
   TBranch        *b_etaTrack;   //!
   TBranch        *b_phiTrack;   //!
   TBranch        *b_pxTrack;   //!
   TBranch        *b_pyTrack;   //!
   TBranch        *b_pzTrack;   //!
   TBranch        *b_vertexXTrack;   //!
   TBranch        *b_vertexYTrack;   //!
   TBranch        *b_vertexZTrack;   //!
   TBranch        *b_massTrack;   //!
   TBranch        *b_mtTrack;   //!
   TBranch        *b_pdgIdTrack;   //!
   TBranch        *b_nDauTrack;   //!
   TBranch        *b_d1IndexTrack;   //!
   TBranch        *b_d2IndexTrack;   //!
   TBranch        *b_d1pdgIdTrack;   //!
   TBranch        *b_d2pdgIdTrack;   //!
   TBranch        *b_vtxIndexTrack;   //!
   TBranch        *b_vtxWeightTrack;   //!
   TBranch        *b_ptErrorTrack;   //!
   TBranch        *b_trackValidHitsTrack;   //!
   TBranch        *b_trackLostHitsTrack;   //!
   TBranch        *b_trackNormalizedChi2Track;   //!
   TBranch        *b_trackDxyTrack;   //!
   TBranch        *b_trackD0Track;   //!
   TBranch        *b_trackDszTrack;   //!
   TBranch        *b_trackDzTrack;   //!
   TBranch        *b_trackDxyErrorTrack;   //!
   TBranch        *b_trackD0ErrorTrack;   //!
   TBranch        *b_trackDszErrorTrack;   //!
   TBranch        *b_trackDzErrorTrack;   //!
   TBranch        *b_trackDxyPVTrack;   //!
   TBranch        *b_trackDszPVTrack;   //!
   TBranch        *b_trackDzPVTrack;   //!
   TBranch        *b_trackVxTrack;   //!
   TBranch        *b_trackVyTrack;   //!
   TBranch        *b_trackVzTrack;   //!
   TBranch        *b_pxAtOuterTrack;   //!
   TBranch        *b_pyAtOuterTrack;   //!
   TBranch        *b_pzAtOuterTrack;   //!
   TBranch        *b_xAtOuterTrack;   //!
   TBranch        *b_yAtOuterTrack;   //!
   TBranch        *b_zAtOuterTrack;   //!
   TBranch        *b_pxAtInnerTrack;   //!
   TBranch        *b_pyAtInnerTrack;   //!
   TBranch        *b_pzAtInnerTrack;   //!
   TBranch        *b_xAtInnerTrack;   //!
   TBranch        *b_yAtInnerTrack;   //!
   TBranch        *b_zAtInnerTrack;   //!
   TBranch        *b_recHitsSizeTrack;   //!
   TBranch        *b_nPV;   //!
   TBranch        *b_PVxPV;   //!
   TBranch        *b_PVyPV;   //!
   TBranch        *b_PVzPV;   //!
   TBranch        *b_PVErrxPV;   //!
   TBranch        *b_PVErryPV;   //!
   TBranch        *b_PVErrzPV;   //!
   TBranch        *b_SumPtPV;   //!
   TBranch        *b_ndofPV;   //!
   TBranch        *b_chi2PV;   //!
   TBranch        *b_nMuon;   //!
   TBranch        *b_chargeMuon;   //!
   TBranch        *b_energyMuon;   //!
   TBranch        *b_etMuon;   //!
   TBranch        *b_momentumMuon;   //!
   TBranch        *b_thetaMuon;   //!
   TBranch        *b_etaMuon;   //!
   TBranch        *b_phiMuon;   //!
   TBranch        *b_pxMuon;   //!
   TBranch        *b_pyMuon;   //!
   TBranch        *b_pzMuon;   //!
   TBranch        *b_vertexXMuon;   //!
   TBranch        *b_vertexYMuon;   //!
   TBranch        *b_vertexZMuon;   //!
   TBranch        *b_massMuon;   //!
   TBranch        *b_mtMuon;   //!
   TBranch        *b_pdgIdMuon;   //!
   TBranch        *b_nDauMuon;   //!
   TBranch        *b_d1IndexMuon;   //!
   TBranch        *b_d2IndexMuon;   //!
   TBranch        *b_d1pdgIdMuon;   //!
   TBranch        *b_d2pdgIdMuon;   //!
   TBranch        *b_nMet;   //!
   TBranch        *b_chargeMet;   //!
   TBranch        *b_energyMet;   //!
   TBranch        *b_etMet;   //!
   TBranch        *b_momentumMet;   //!
   TBranch        *b_thetaMet;   //!
   TBranch        *b_etaMet;   //!
   TBranch        *b_phiMet;   //!
   TBranch        *b_pxMet;   //!
   TBranch        *b_pyMet;   //!
   TBranch        *b_pzMet;   //!
   TBranch        *b_vertexXMet;   //!
   TBranch        *b_vertexYMet;   //!
   TBranch        *b_vertexZMet;   //!
   TBranch        *b_massMet;   //!
   TBranch        *b_mtMet;   //!
   TBranch        *b_pdgIdMet;   //!
   TBranch        *b_nDauMet;   //!
   TBranch        *b_d1IndexMet;   //!
   TBranch        *b_d2IndexMet;   //!
   TBranch        *b_d1pdgIdMet;   //!
   TBranch        *b_d2pdgIdMet;   //!
   TBranch        *b_nPFMet;   //!
   TBranch        *b_chargePFMet;   //!
   TBranch        *b_energyPFMet;   //!
   TBranch        *b_etPFMet;   //!
   TBranch        *b_momentumPFMet;   //!
   TBranch        *b_thetaPFMet;   //!
   TBranch        *b_etaPFMet;   //!
   TBranch        *b_phiPFMet;   //!
   TBranch        *b_pxPFMet;   //!
   TBranch        *b_pyPFMet;   //!
   TBranch        *b_pzPFMet;   //!
   TBranch        *b_vertexXPFMet;   //!
   TBranch        *b_vertexYPFMet;   //!
   TBranch        *b_vertexZPFMet;   //!
   TBranch        *b_massPFMet;   //!
   TBranch        *b_mtPFMet;   //!
   TBranch        *b_pdgIdPFMet;   //!
   TBranch        *b_nDauPFMet;   //!
   TBranch        *b_d1IndexPFMet;   //!
   TBranch        *b_d2IndexPFMet;   //!
   TBranch        *b_d1pdgIdPFMet;   //!
   TBranch        *b_d2pdgIdPFMet;   //!
   TBranch        *b_nGenMet;   //!
   TBranch        *b_chargeGenMet;   //!
   TBranch        *b_energyGenMet;   //!
   TBranch        *b_etGenMet;   //!
   TBranch        *b_momentumGenMet;   //!
   TBranch        *b_thetaGenMet;   //!
   TBranch        *b_etaGenMet;   //!
   TBranch        *b_phiGenMet;   //!
   TBranch        *b_pxGenMet;   //!
   TBranch        *b_pyGenMet;   //!
   TBranch        *b_pzGenMet;   //!
   TBranch        *b_vertexXGenMet;   //!
   TBranch        *b_vertexYGenMet;   //!
   TBranch        *b_vertexZGenMet;   //!
   TBranch        *b_massGenMet;   //!
   TBranch        *b_mtGenMet;   //!
   TBranch        *b_pdgIdGenMet;   //!
   TBranch        *b_nDauGenMet;   //!
   TBranch        *b_d1IndexGenMet;   //!
   TBranch        *b_d2IndexGenMet;   //!
   TBranch        *b_d1pdgIdGenMet;   //!
   TBranch        *b_d2pdgIdGenMet;   //!
   TBranch        *b_nSisConeCorrJet;   //!
   TBranch        *b_chargeSisConeCorrJet;   //!
   TBranch        *b_energySisConeCorrJet;   //!
   TBranch        *b_etSisConeCorrJet;   //!
   TBranch        *b_momentumSisConeCorrJet;   //!
   TBranch        *b_thetaSisConeCorrJet;   //!
   TBranch        *b_etaSisConeCorrJet;   //!
   TBranch        *b_phiSisConeCorrJet;   //!
   TBranch        *b_pxSisConeCorrJet;   //!
   TBranch        *b_pySisConeCorrJet;   //!
   TBranch        *b_pzSisConeCorrJet;   //!
   TBranch        *b_vertexXSisConeCorrJet;   //!
   TBranch        *b_vertexYSisConeCorrJet;   //!
   TBranch        *b_vertexZSisConeCorrJet;   //!
   TBranch        *b_massSisConeCorrJet;   //!
   TBranch        *b_mtSisConeCorrJet;   //!
   TBranch        *b_pdgIdSisConeCorrJet;   //!
   TBranch        *b_nDauSisConeCorrJet;   //!
   TBranch        *b_d1IndexSisConeCorrJet;   //!
   TBranch        *b_d2IndexSisConeCorrJet;   //!
   TBranch        *b_d1pdgIdSisConeCorrJet;   //!
   TBranch        *b_d2pdgIdSisConeCorrJet;   //!
   TBranch        *b_alphaSisConeCorrJet;   //!
   TBranch        *b_emFracSisConeCorrJet;   //!
   TBranch        *b_hadFracSisConeCorrJet;   //!
   TBranch        *b_nSisConeJet;   //!
   TBranch        *b_chargeSisConeJet;   //!
   TBranch        *b_energySisConeJet;   //!
   TBranch        *b_etSisConeJet;   //!
   TBranch        *b_momentumSisConeJet;   //!
   TBranch        *b_thetaSisConeJet;   //!
   TBranch        *b_etaSisConeJet;   //!
   TBranch        *b_phiSisConeJet;   //!
   TBranch        *b_pxSisConeJet;   //!
   TBranch        *b_pySisConeJet;   //!
   TBranch        *b_pzSisConeJet;   //!
   TBranch        *b_vertexXSisConeJet;   //!
   TBranch        *b_vertexYSisConeJet;   //!
   TBranch        *b_vertexZSisConeJet;   //!
   TBranch        *b_massSisConeJet;   //!
   TBranch        *b_mtSisConeJet;   //!
   TBranch        *b_pdgIdSisConeJet;   //!
   TBranch        *b_nDauSisConeJet;   //!
   TBranch        *b_d1IndexSisConeJet;   //!
   TBranch        *b_d2IndexSisConeJet;   //!
   TBranch        *b_d1pdgIdSisConeJet;   //!
   TBranch        *b_d2pdgIdSisConeJet;   //!
   TBranch        *b_alphaSisConeJet;   //!
   TBranch        *b_emFracSisConeJet;   //!
   TBranch        *b_hadFracSisConeJet;   //!
   TBranch        *b_nSisConePFJet;   //!
   TBranch        *b_chargeSisConePFJet;   //!
   TBranch        *b_energySisConePFJet;   //!
   TBranch        *b_etSisConePFJet;   //!
   TBranch        *b_momentumSisConePFJet;   //!
   TBranch        *b_thetaSisConePFJet;   //!
   TBranch        *b_etaSisConePFJet;   //!
   TBranch        *b_phiSisConePFJet;   //!
   TBranch        *b_pxSisConePFJet;   //!
   TBranch        *b_pySisConePFJet;   //!
   TBranch        *b_pzSisConePFJet;   //!
   TBranch        *b_vertexXSisConePFJet;   //!
   TBranch        *b_vertexYSisConePFJet;   //!
   TBranch        *b_vertexZSisConePFJet;   //!
   TBranch        *b_massSisConePFJet;   //!
   TBranch        *b_mtSisConePFJet;   //!
   TBranch        *b_pdgIdSisConePFJet;   //!
   TBranch        *b_nDauSisConePFJet;   //!
   TBranch        *b_d1IndexSisConePFJet;   //!
   TBranch        *b_d2IndexSisConePFJet;   //!
   TBranch        *b_d1pdgIdSisConePFJet;   //!
   TBranch        *b_d2pdgIdSisConePFJet;   //!
   TBranch        *b_chargedHadronEnergySisConePFJet;   //!
   TBranch        *b_neutralHadronEnergySisConePFJet;   //!
   TBranch        *b_chargedEmEnergySisConePFJet;   //!
   TBranch        *b_neutralEmEnergySisConePFJet;   //!
   TBranch        *b_neutralMultiplicitySisConePFJet;   //!
   TBranch        *b_chargedMultiplicitySisConePFJet;   //!
   TBranch        *b_muonMultiplicitySisConePFJet;   //!
   TBranch        *b_nSisConePFCorrJet;   //!
   TBranch        *b_chargeSisConePFCorrJet;   //!
   TBranch        *b_energySisConePFCorrJet;   //!
   TBranch        *b_etSisConePFCorrJet;   //!
   TBranch        *b_momentumSisConePFCorrJet;   //!
   TBranch        *b_thetaSisConePFCorrJet;   //!
   TBranch        *b_etaSisConePFCorrJet;   //!
   TBranch        *b_phiSisConePFCorrJet;   //!
   TBranch        *b_pxSisConePFCorrJet;   //!
   TBranch        *b_pySisConePFCorrJet;   //!
   TBranch        *b_pzSisConePFCorrJet;   //!
   TBranch        *b_vertexXSisConePFCorrJet;   //!
   TBranch        *b_vertexYSisConePFCorrJet;   //!
   TBranch        *b_vertexZSisConePFCorrJet;   //!
   TBranch        *b_massSisConePFCorrJet;   //!
   TBranch        *b_mtSisConePFCorrJet;   //!
   TBranch        *b_pdgIdSisConePFCorrJet;   //!
   TBranch        *b_nDauSisConePFCorrJet;   //!
   TBranch        *b_d1IndexSisConePFCorrJet;   //!
   TBranch        *b_d2IndexSisConePFCorrJet;   //!
   TBranch        *b_d1pdgIdSisConePFCorrJet;   //!
   TBranch        *b_d2pdgIdSisConePFCorrJet;   //!
   TBranch        *b_chargedHadronEnergySisConePFCorrJet;   //!
   TBranch        *b_neutralHadronEnergySisConePFCorrJet;   //!
   TBranch        *b_chargedEmEnergySisConePFCorrJet;   //!
   TBranch        *b_neutralEmEnergySisConePFCorrJet;   //!
   TBranch        *b_neutralMultiplicitySisConePFCorrJet;   //!
   TBranch        *b_chargedMultiplicitySisConePFCorrJet;   //!
   TBranch        *b_muonMultiplicitySisConePFCorrJet;   //!
   TBranch        *b_nSisConeGenJet;   //!
   TBranch        *b_chargeSisConeGenJet;   //!
   TBranch        *b_energySisConeGenJet;   //!
   TBranch        *b_etSisConeGenJet;   //!
   TBranch        *b_momentumSisConeGenJet;   //!
   TBranch        *b_thetaSisConeGenJet;   //!
   TBranch        *b_etaSisConeGenJet;   //!
   TBranch        *b_phiSisConeGenJet;   //!
   TBranch        *b_pxSisConeGenJet;   //!
   TBranch        *b_pySisConeGenJet;   //!
   TBranch        *b_pzSisConeGenJet;   //!
   TBranch        *b_vertexXSisConeGenJet;   //!
   TBranch        *b_vertexYSisConeGenJet;   //!
   TBranch        *b_vertexZSisConeGenJet;   //!
   TBranch        *b_massSisConeGenJet;   //!
   TBranch        *b_mtSisConeGenJet;   //!
   TBranch        *b_pdgIdSisConeGenJet;   //!
   TBranch        *b_nDauSisConeGenJet;   //!
   TBranch        *b_d1IndexSisConeGenJet;   //!
   TBranch        *b_d2IndexSisConeGenJet;   //!
   TBranch        *b_d1pdgIdSisConeGenJet;   //!
   TBranch        *b_d2pdgIdSisConeGenJet;   //!

   HiggsBase(TTree *tree=0);
   virtual ~HiggsBase();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   virtual Bool_t   Notify();
   virtual void     Show(Long64_t entry = -1);
};

#endif

#ifdef HiggsBase_cxx
HiggsBase::HiggsBase(TTree *tree)
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
   if (tree == 0) {
      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("rfio:///castor/cern.ch/user/e/emanuele/Higgs21X/H160_WW_2l/default_1.root");
      if (!f) {
         f = new TFile("rfio:///castor/cern.ch/user/e/emanuele/Higgs21X/H160_WW_2l/default_1.root");
      }
      tree = (TTree*)gDirectory->Get("ntp1");

   }
   Init(tree);
}

HiggsBase::~HiggsBase()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t HiggsBase::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Long64_t HiggsBase::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (!fChain->InheritsFrom(TChain::Class()))  return centry;
   TChain *chain = (TChain*)fChain;
   if (chain->GetTreeNumber() != fCurrent) {
      fCurrent = chain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void HiggsBase::Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set branch addresses and branch pointers
   if (!tree) return;
   fChain = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("runNumber", &runNumber, &b_runNumber);
   fChain->SetBranchAddress("eventNumber", &eventNumber, &b_eventNumber);
   fChain->SetBranchAddress("lumiBlock", &lumiBlock, &b_lumiBlock);
   fChain->SetBranchAddress("bunchCrossing", &bunchCrossing, &b_bunchCrossing);
   fChain->SetBranchAddress("orbitNumber", &orbitNumber, &b_orbitNumber);
   fChain->SetBranchAddress("nMc", &nMc, &b_nMc);
   fChain->SetBranchAddress("pMc", pMc, &b_pMc);
   fChain->SetBranchAddress("massMc", massMc, &b_massMc);
   fChain->SetBranchAddress("thetaMc", thetaMc, &b_thetaMc);
   fChain->SetBranchAddress("etaMc", etaMc, &b_etaMc);
   fChain->SetBranchAddress("phiMc", phiMc, &b_phiMc);
   fChain->SetBranchAddress("energyMc", energyMc, &b_energyMc);
   fChain->SetBranchAddress("idMc", idMc, &b_idMc);
   fChain->SetBranchAddress("mothMc", mothMc, &b_mothMc);
   fChain->SetBranchAddress("nDauMc", nDauMc, &b_nDauMc);
   fChain->SetBranchAddress("statusMc", statusMc, &b_statusMc);
   fChain->SetBranchAddress("xMc", xMc, &b_xMc);
   fChain->SetBranchAddress("yMc", yMc, &b_yMc);
   fChain->SetBranchAddress("zMc", zMc, &b_zMc);
   fChain->SetBranchAddress("nTrg", &nTrg, &b_nTrg);
   fChain->SetBranchAddress("firedTrg", firedTrg, &b_firedTrg);
   fChain->SetBranchAddress("evtPresel", &evtPresel, &b_evtPresel);
   fChain->SetBranchAddress("evtKfactor", &evtKfactor, &b_evtKfactor);
   fChain->SetBranchAddress("nEle", &nEle, &b_nEle);
   fChain->SetBranchAddress("chargeEle", chargeEle, &b_chargeEle);
   fChain->SetBranchAddress("energyEle", energyEle, &b_energyEle);
   fChain->SetBranchAddress("etEle", etEle, &b_etEle);
   fChain->SetBranchAddress("momentumEle", momentumEle, &b_momentumEle);
   fChain->SetBranchAddress("thetaEle", thetaEle, &b_thetaEle);
   fChain->SetBranchAddress("etaEle", etaEle, &b_etaEle);
   fChain->SetBranchAddress("phiEle", phiEle, &b_phiEle);
   fChain->SetBranchAddress("pxEle", pxEle, &b_pxEle);
   fChain->SetBranchAddress("pyEle", pyEle, &b_pyEle);
   fChain->SetBranchAddress("pzEle", pzEle, &b_pzEle);
   fChain->SetBranchAddress("vertexXEle", vertexXEle, &b_vertexXEle);
   fChain->SetBranchAddress("vertexYEle", vertexYEle, &b_vertexYEle);
   fChain->SetBranchAddress("vertexZEle", vertexZEle, &b_vertexZEle);
   fChain->SetBranchAddress("massEle", massEle, &b_massEle);
   fChain->SetBranchAddress("mtEle", mtEle, &b_mtEle);
   fChain->SetBranchAddress("pdgIdEle", pdgIdEle, &b_pdgIdEle);
   fChain->SetBranchAddress("nDauEle", nDauEle, &b_nDauEle);
   fChain->SetBranchAddress("d1IndexEle", d1IndexEle, &b_d1IndexEle);
   fChain->SetBranchAddress("d2IndexEle", d2IndexEle, &b_d2IndexEle);
   fChain->SetBranchAddress("d1pdgIdEle", d1pdgIdEle, &b_d1pdgIdEle);
   fChain->SetBranchAddress("d2pdgIdEle", d2pdgIdEle, &b_d2pdgIdEle);
   fChain->SetBranchAddress("ecalEle", ecalEle, &b_ecalEle);
   fChain->SetBranchAddress("nCluEle", nCluEle, &b_nCluEle);
   fChain->SetBranchAddress("nCryEle", nCryEle, &b_nCryEle);
   fChain->SetBranchAddress("e3x3Ele", e3x3Ele, &b_e3x3Ele);
   fChain->SetBranchAddress("e5x5Ele", e5x5Ele, &b_e5x5Ele);
   fChain->SetBranchAddress("eMaxEle", eMaxEle, &b_eMaxEle);
   fChain->SetBranchAddress("latEle", latEle, &b_latEle);
   fChain->SetBranchAddress("phiLatEle", phiLatEle, &b_phiLatEle);
   fChain->SetBranchAddress("etaLatEle", etaLatEle, &b_etaLatEle);
   fChain->SetBranchAddress("erawEle", erawEle, &b_erawEle);
   fChain->SetBranchAddress("caloEtaEle", caloEtaEle, &b_caloEtaEle);
   fChain->SetBranchAddress("caloPhiEle", caloPhiEle, &b_caloPhiEle);
   fChain->SetBranchAddress("e2x2Ele", e2x2Ele, &b_e2x2Ele);
   fChain->SetBranchAddress("e2ndEle", e2ndEle, &b_e2ndEle);
   fChain->SetBranchAddress("s1s9Ele", s1s9Ele, &b_s1s9Ele);
   fChain->SetBranchAddress("s9s25Ele", s9s25Ele, &b_s9s25Ele);
   fChain->SetBranchAddress("covEtaEtaEle", covEtaEtaEle, &b_covEtaEtaEle);
   fChain->SetBranchAddress("covEtaPhiEle", covEtaPhiEle, &b_covEtaPhiEle);
   fChain->SetBranchAddress("covPhiPhiEle", covPhiPhiEle, &b_covPhiPhiEle);
   fChain->SetBranchAddress("covIEtaIEtaEle", covIEtaIEtaEle, &b_covIEtaIEtaEle);
   fChain->SetBranchAddress("covIEtaIPhiEle", covIEtaIPhiEle, &b_covIEtaIPhiEle);
   fChain->SetBranchAddress("covIPhiIPhiEle", covIPhiIPhiEle, &b_covIPhiIPhiEle);
   fChain->SetBranchAddress("a20Ele", a20Ele, &b_a20Ele);
   fChain->SetBranchAddress("a42Ele", a42Ele, &b_a42Ele);
   fChain->SetBranchAddress("eleTrackNormalizedChi2Ele", eleTrackNormalizedChi2Ele, &b_eleTrackNormalizedChi2Ele);
   fChain->SetBranchAddress("eleTrackDxyEle", eleTrackDxyEle, &b_eleTrackDxyEle);
   fChain->SetBranchAddress("eleTrackD0Ele", eleTrackD0Ele, &b_eleTrackD0Ele);
   fChain->SetBranchAddress("eleTrackDszEle", eleTrackDszEle, &b_eleTrackDszEle);
   fChain->SetBranchAddress("eleTrackDzEle", eleTrackDzEle, &b_eleTrackDzEle);
   fChain->SetBranchAddress("eleTrackDxyErrorEle", eleTrackDxyErrorEle, &b_eleTrackDxyErrorEle);
   fChain->SetBranchAddress("eleTrackD0ErrorEle", eleTrackD0ErrorEle, &b_eleTrackD0ErrorEle);
   fChain->SetBranchAddress("eleTrackDszErrorEle", eleTrackDszErrorEle, &b_eleTrackDszErrorEle);
   fChain->SetBranchAddress("eleTrackDzErrorEle", eleTrackDzErrorEle, &b_eleTrackDzErrorEle);
   fChain->SetBranchAddress("eleTrackValidHitsEle", eleTrackValidHitsEle, &b_eleTrackValidHitsEle);
   fChain->SetBranchAddress("eleTrackLostHitsEle", eleTrackLostHitsEle, &b_eleTrackLostHitsEle);
   fChain->SetBranchAddress("eleTrackVxEle", eleTrackVxEle, &b_eleTrackVxEle);
   fChain->SetBranchAddress("eleTrackVyEle", eleTrackVyEle, &b_eleTrackVyEle);
   fChain->SetBranchAddress("eleTrackVzEle", eleTrackVzEle, &b_eleTrackVzEle);
   fChain->SetBranchAddress("pxAtInnerEle", pxAtInnerEle, &b_pxAtInnerEle);
   fChain->SetBranchAddress("pyAtInnerEle", pyAtInnerEle, &b_pyAtInnerEle);
   fChain->SetBranchAddress("pzAtInnerEle", pzAtInnerEle, &b_pzAtInnerEle);
   fChain->SetBranchAddress("xAtInnerEle", xAtInnerEle, &b_xAtInnerEle);
   fChain->SetBranchAddress("yAtInnerEle", yAtInnerEle, &b_yAtInnerEle);
   fChain->SetBranchAddress("zAtInnerEle", zAtInnerEle, &b_zAtInnerEle);
   fChain->SetBranchAddress("pxAtOuterEle", pxAtOuterEle, &b_pxAtOuterEle);
   fChain->SetBranchAddress("pyAtOuterEle", pyAtOuterEle, &b_pyAtOuterEle);
   fChain->SetBranchAddress("pzAtOuterEle", pzAtOuterEle, &b_pzAtOuterEle);
   fChain->SetBranchAddress("xAtOuterEle", xAtOuterEle, &b_xAtOuterEle);
   fChain->SetBranchAddress("yAtOuterEle", yAtOuterEle, &b_yAtOuterEle);
   fChain->SetBranchAddress("zAtOuterEle", zAtOuterEle, &b_zAtOuterEle);
   fChain->SetBranchAddress("eleFullCorrEEle", eleFullCorrEEle, &b_eleFullCorrEEle);
   fChain->SetBranchAddress("eleCaloCorrEEle", eleCaloCorrEEle, &b_eleCaloCorrEEle);
   fChain->SetBranchAddress("eleNxtalCorrEEle", eleNxtalCorrEEle, &b_eleNxtalCorrEEle);
   fChain->SetBranchAddress("eleRawEEle", eleRawEEle, &b_eleRawEEle);
   fChain->SetBranchAddress("eleTrackerPEle", eleTrackerPEle, &b_eleTrackerPEle);
   fChain->SetBranchAddress("eleClassEle", eleClassEle, &b_eleClassEle);
   fChain->SetBranchAddress("eleStandardClassEle", eleStandardClassEle, &b_eleStandardClassEle);
   fChain->SetBranchAddress("eleHoEEle", eleHoEEle, &b_eleHoEEle);
   fChain->SetBranchAddress("eleCorrEoPEle", eleCorrEoPEle, &b_eleCorrEoPEle);
   fChain->SetBranchAddress("eleNotCorrEoPEle", eleNotCorrEoPEle, &b_eleNotCorrEoPEle);
   fChain->SetBranchAddress("eleCorrEoPoutEle", eleCorrEoPoutEle, &b_eleCorrEoPoutEle);
   fChain->SetBranchAddress("eleNotCorrEoPoutEle", eleNotCorrEoPoutEle, &b_eleNotCorrEoPoutEle);
   fChain->SetBranchAddress("eleDeltaEtaAtVtxEle", eleDeltaEtaAtVtxEle, &b_eleDeltaEtaAtVtxEle);
   fChain->SetBranchAddress("eleDeltaPhiAtVtxEle", eleDeltaPhiAtVtxEle, &b_eleDeltaPhiAtVtxEle);
   fChain->SetBranchAddress("eleDeltaEtaAtCaloEle", eleDeltaEtaAtCaloEle, &b_eleDeltaEtaAtCaloEle);
   fChain->SetBranchAddress("eleDeltaPhiAtCaloEle", eleDeltaPhiAtCaloEle, &b_eleDeltaPhiAtCaloEle);
   fChain->SetBranchAddress("eleMinDR03Ele", eleMinDR03Ele, &b_eleMinDR03Ele);
   fChain->SetBranchAddress("eleMinDRveto03Ele", eleMinDRveto03Ele, &b_eleMinDRveto03Ele);
   fChain->SetBranchAddress("eleSumPt03Ele", eleSumPt03Ele, &b_eleSumPt03Ele);
   fChain->SetBranchAddress("eleSumPtSquared03Ele", eleSumPtSquared03Ele, &b_eleSumPtSquared03Ele);
   fChain->SetBranchAddress("eleSumN03Ele", eleSumN03Ele, &b_eleSumN03Ele);
   fChain->SetBranchAddress("eleSumPt04Ele", eleSumPt04Ele, &b_eleSumPt04Ele);
   fChain->SetBranchAddress("eleSumPt05Ele", eleSumPt05Ele, &b_eleSumPt05Ele);
   fChain->SetBranchAddress("eleSumPtPreselectionEle", eleSumPtPreselectionEle, &b_eleSumPtPreselectionEle);
   fChain->SetBranchAddress("eleSumHadEt04Ele", eleSumHadEt04Ele, &b_eleSumHadEt04Ele);
   fChain->SetBranchAddress("eleSumEmEt04Ele", eleSumEmEt04Ele, &b_eleSumEmEt04Ele);
   fChain->SetBranchAddress("eleSumHadEt05Ele", eleSumHadEt05Ele, &b_eleSumHadEt05Ele);
   fChain->SetBranchAddress("eleSumEmEt05Ele", eleSumEmEt05Ele, &b_eleSumEmEt05Ele);
   fChain->SetBranchAddress("eleIsoFromDepsTkEle", eleIsoFromDepsTkEle, &b_eleIsoFromDepsTkEle);
   fChain->SetBranchAddress("eleIsoFromDepsEcalEle", eleIsoFromDepsEcalEle, &b_eleIsoFromDepsEcalEle);
   fChain->SetBranchAddress("eleIsoFromDepsHcalEle", eleIsoFromDepsHcalEle, &b_eleIsoFromDepsHcalEle);
   fChain->SetBranchAddress("eleScBasedEcalSum04Ele", eleScBasedEcalSum04Ele, &b_eleScBasedEcalSum04Ele);
   fChain->SetBranchAddress("eleScBasedEcalSum05Ele", eleScBasedEcalSum05Ele, &b_eleScBasedEcalSum05Ele);
   fChain->SetBranchAddress("eleScHaloBasedEcalSum04Ele", eleScHaloBasedEcalSum04Ele, &b_eleScHaloBasedEcalSum04Ele);
   fChain->SetBranchAddress("eleScHaloBasedEcalSum05Ele", eleScHaloBasedEcalSum05Ele, &b_eleScHaloBasedEcalSum05Ele);
   fChain->SetBranchAddress("eleIdCutBasedEle", eleIdCutBasedEle, &b_eleIdCutBasedEle);
   fChain->SetBranchAddress("eleLikelihoodEle", eleLikelihoodEle, &b_eleLikelihoodEle);
   fChain->SetBranchAddress("eleIdStandardCutsRobustEle", eleIdStandardCutsRobustEle, &b_eleIdStandardCutsRobustEle);
   fChain->SetBranchAddress("eleIdStandardCutsLooseEle", eleIdStandardCutsLooseEle, &b_eleIdStandardCutsLooseEle);
   fChain->SetBranchAddress("eleIdStandardCutsTightEle", eleIdStandardCutsTightEle, &b_eleIdStandardCutsTightEle);
   fChain->SetBranchAddress("eleTipEle", eleTipEle, &b_eleTipEle);
   fChain->SetBranchAddress("nTrack", &nTrack, &b_nTrack);
   fChain->SetBranchAddress("chargeTrack", chargeTrack, &b_chargeTrack);
   fChain->SetBranchAddress("energyTrack", energyTrack, &b_energyTrack);
   fChain->SetBranchAddress("etTrack", etTrack, &b_etTrack);
   fChain->SetBranchAddress("momentumTrack", momentumTrack, &b_momentumTrack);
   fChain->SetBranchAddress("thetaTrack", thetaTrack, &b_thetaTrack);
   fChain->SetBranchAddress("etaTrack", etaTrack, &b_etaTrack);
   fChain->SetBranchAddress("phiTrack", phiTrack, &b_phiTrack);
   fChain->SetBranchAddress("pxTrack", pxTrack, &b_pxTrack);
   fChain->SetBranchAddress("pyTrack", pyTrack, &b_pyTrack);
   fChain->SetBranchAddress("pzTrack", pzTrack, &b_pzTrack);
   fChain->SetBranchAddress("vertexXTrack", vertexXTrack, &b_vertexXTrack);
   fChain->SetBranchAddress("vertexYTrack", vertexYTrack, &b_vertexYTrack);
   fChain->SetBranchAddress("vertexZTrack", vertexZTrack, &b_vertexZTrack);
   fChain->SetBranchAddress("massTrack", massTrack, &b_massTrack);
   fChain->SetBranchAddress("mtTrack", mtTrack, &b_mtTrack);
   fChain->SetBranchAddress("pdgIdTrack", pdgIdTrack, &b_pdgIdTrack);
   fChain->SetBranchAddress("nDauTrack", nDauTrack, &b_nDauTrack);
   fChain->SetBranchAddress("d1IndexTrack", d1IndexTrack, &b_d1IndexTrack);
   fChain->SetBranchAddress("d2IndexTrack", d2IndexTrack, &b_d2IndexTrack);
   fChain->SetBranchAddress("d1pdgIdTrack", d1pdgIdTrack, &b_d1pdgIdTrack);
   fChain->SetBranchAddress("d2pdgIdTrack", d2pdgIdTrack, &b_d2pdgIdTrack);
   fChain->SetBranchAddress("vtxIndexTrack", vtxIndexTrack, &b_vtxIndexTrack);
   fChain->SetBranchAddress("vtxWeightTrack", vtxWeightTrack, &b_vtxWeightTrack);
   fChain->SetBranchAddress("ptErrorTrack", ptErrorTrack, &b_ptErrorTrack);
   fChain->SetBranchAddress("trackValidHitsTrack", trackValidHitsTrack, &b_trackValidHitsTrack);
   fChain->SetBranchAddress("trackLostHitsTrack", trackLostHitsTrack, &b_trackLostHitsTrack);
   fChain->SetBranchAddress("trackNormalizedChi2Track", trackNormalizedChi2Track, &b_trackNormalizedChi2Track);
   fChain->SetBranchAddress("trackDxyTrack", trackDxyTrack, &b_trackDxyTrack);
   fChain->SetBranchAddress("trackD0Track", trackD0Track, &b_trackD0Track);
   fChain->SetBranchAddress("trackDszTrack", trackDszTrack, &b_trackDszTrack);
   fChain->SetBranchAddress("trackDzTrack", trackDzTrack, &b_trackDzTrack);
   fChain->SetBranchAddress("trackDxyErrorTrack", trackDxyErrorTrack, &b_trackDxyErrorTrack);
   fChain->SetBranchAddress("trackD0ErrorTrack", trackD0ErrorTrack, &b_trackD0ErrorTrack);
   fChain->SetBranchAddress("trackDszErrorTrack", trackDszErrorTrack, &b_trackDszErrorTrack);
   fChain->SetBranchAddress("trackDzErrorTrack", trackDzErrorTrack, &b_trackDzErrorTrack);
   fChain->SetBranchAddress("trackDxyPVTrack", trackDxyPVTrack, &b_trackDxyPVTrack);
   fChain->SetBranchAddress("trackDszPVTrack", trackDszPVTrack, &b_trackDszPVTrack);
   fChain->SetBranchAddress("trackDzPVTrack", trackDzPVTrack, &b_trackDzPVTrack);
   fChain->SetBranchAddress("trackVxTrack", trackVxTrack, &b_trackVxTrack);
   fChain->SetBranchAddress("trackVyTrack", trackVyTrack, &b_trackVyTrack);
   fChain->SetBranchAddress("trackVzTrack", trackVzTrack, &b_trackVzTrack);
   fChain->SetBranchAddress("pxAtOuterTrack", pxAtOuterTrack, &b_pxAtOuterTrack);
   fChain->SetBranchAddress("pyAtOuterTrack", pyAtOuterTrack, &b_pyAtOuterTrack);
   fChain->SetBranchAddress("pzAtOuterTrack", pzAtOuterTrack, &b_pzAtOuterTrack);
   fChain->SetBranchAddress("xAtOuterTrack", xAtOuterTrack, &b_xAtOuterTrack);
   fChain->SetBranchAddress("yAtOuterTrack", yAtOuterTrack, &b_yAtOuterTrack);
   fChain->SetBranchAddress("zAtOuterTrack", zAtOuterTrack, &b_zAtOuterTrack);
   fChain->SetBranchAddress("pxAtInnerTrack", pxAtInnerTrack, &b_pxAtInnerTrack);
   fChain->SetBranchAddress("pyAtInnerTrack", pyAtInnerTrack, &b_pyAtInnerTrack);
   fChain->SetBranchAddress("pzAtInnerTrack", pzAtInnerTrack, &b_pzAtInnerTrack);
   fChain->SetBranchAddress("xAtInnerTrack", xAtInnerTrack, &b_xAtInnerTrack);
   fChain->SetBranchAddress("yAtInnerTrack", yAtInnerTrack, &b_yAtInnerTrack);
   fChain->SetBranchAddress("zAtInnerTrack", zAtInnerTrack, &b_zAtInnerTrack);
   fChain->SetBranchAddress("recHitsSizeTrack", recHitsSizeTrack, &b_recHitsSizeTrack);
   fChain->SetBranchAddress("nPV", &nPV, &b_nPV);
   fChain->SetBranchAddress("PVxPV", PVxPV, &b_PVxPV);
   fChain->SetBranchAddress("PVyPV", PVyPV, &b_PVyPV);
   fChain->SetBranchAddress("PVzPV", PVzPV, &b_PVzPV);
   fChain->SetBranchAddress("PVErrxPV", PVErrxPV, &b_PVErrxPV);
   fChain->SetBranchAddress("PVErryPV", PVErryPV, &b_PVErryPV);
   fChain->SetBranchAddress("PVErrzPV", PVErrzPV, &b_PVErrzPV);
   fChain->SetBranchAddress("SumPtPV", SumPtPV, &b_SumPtPV);
   fChain->SetBranchAddress("ndofPV", ndofPV, &b_ndofPV);
   fChain->SetBranchAddress("chi2PV", chi2PV, &b_chi2PV);
   fChain->SetBranchAddress("nMuon", &nMuon, &b_nMuon);
   fChain->SetBranchAddress("chargeMuon", chargeMuon, &b_chargeMuon);
   fChain->SetBranchAddress("energyMuon", energyMuon, &b_energyMuon);
   fChain->SetBranchAddress("etMuon", etMuon, &b_etMuon);
   fChain->SetBranchAddress("momentumMuon", momentumMuon, &b_momentumMuon);
   fChain->SetBranchAddress("thetaMuon", thetaMuon, &b_thetaMuon);
   fChain->SetBranchAddress("etaMuon", etaMuon, &b_etaMuon);
   fChain->SetBranchAddress("phiMuon", phiMuon, &b_phiMuon);
   fChain->SetBranchAddress("pxMuon", pxMuon, &b_pxMuon);
   fChain->SetBranchAddress("pyMuon", pyMuon, &b_pyMuon);
   fChain->SetBranchAddress("pzMuon", pzMuon, &b_pzMuon);
   fChain->SetBranchAddress("vertexXMuon", vertexXMuon, &b_vertexXMuon);
   fChain->SetBranchAddress("vertexYMuon", vertexYMuon, &b_vertexYMuon);
   fChain->SetBranchAddress("vertexZMuon", vertexZMuon, &b_vertexZMuon);
   fChain->SetBranchAddress("massMuon", massMuon, &b_massMuon);
   fChain->SetBranchAddress("mtMuon", mtMuon, &b_mtMuon);
   fChain->SetBranchAddress("pdgIdMuon", pdgIdMuon, &b_pdgIdMuon);
   fChain->SetBranchAddress("nDauMuon", nDauMuon, &b_nDauMuon);
   fChain->SetBranchAddress("d1IndexMuon", d1IndexMuon, &b_d1IndexMuon);
   fChain->SetBranchAddress("d2IndexMuon", d2IndexMuon, &b_d2IndexMuon);
   fChain->SetBranchAddress("d1pdgIdMuon", d1pdgIdMuon, &b_d1pdgIdMuon);
   fChain->SetBranchAddress("d2pdgIdMuon", d2pdgIdMuon, &b_d2pdgIdMuon);
   fChain->SetBranchAddress("nMet", &nMet, &b_nMet);
   fChain->SetBranchAddress("chargeMet", chargeMet, &b_chargeMet);
   fChain->SetBranchAddress("energyMet", energyMet, &b_energyMet);
   fChain->SetBranchAddress("etMet", etMet, &b_etMet);
   fChain->SetBranchAddress("momentumMet", momentumMet, &b_momentumMet);
   fChain->SetBranchAddress("thetaMet", thetaMet, &b_thetaMet);
   fChain->SetBranchAddress("etaMet", etaMet, &b_etaMet);
   fChain->SetBranchAddress("phiMet", phiMet, &b_phiMet);
   fChain->SetBranchAddress("pxMet", pxMet, &b_pxMet);
   fChain->SetBranchAddress("pyMet", pyMet, &b_pyMet);
   fChain->SetBranchAddress("pzMet", pzMet, &b_pzMet);
   fChain->SetBranchAddress("vertexXMet", vertexXMet, &b_vertexXMet);
   fChain->SetBranchAddress("vertexYMet", vertexYMet, &b_vertexYMet);
   fChain->SetBranchAddress("vertexZMet", vertexZMet, &b_vertexZMet);
   fChain->SetBranchAddress("massMet", massMet, &b_massMet);
   fChain->SetBranchAddress("mtMet", mtMet, &b_mtMet);
   fChain->SetBranchAddress("pdgIdMet", pdgIdMet, &b_pdgIdMet);
   fChain->SetBranchAddress("nDauMet", nDauMet, &b_nDauMet);
   fChain->SetBranchAddress("d1IndexMet", d1IndexMet, &b_d1IndexMet);
   fChain->SetBranchAddress("d2IndexMet", d2IndexMet, &b_d2IndexMet);
   fChain->SetBranchAddress("d1pdgIdMet", d1pdgIdMet, &b_d1pdgIdMet);
   fChain->SetBranchAddress("d2pdgIdMet", d2pdgIdMet, &b_d2pdgIdMet);
   fChain->SetBranchAddress("nPFMet", &nPFMet, &b_nPFMet);
   fChain->SetBranchAddress("chargePFMet", chargePFMet, &b_chargePFMet);
   fChain->SetBranchAddress("energyPFMet", energyPFMet, &b_energyPFMet);
   fChain->SetBranchAddress("etPFMet", etPFMet, &b_etPFMet);
   fChain->SetBranchAddress("momentumPFMet", momentumPFMet, &b_momentumPFMet);
   fChain->SetBranchAddress("thetaPFMet", thetaPFMet, &b_thetaPFMet);
   fChain->SetBranchAddress("etaPFMet", etaPFMet, &b_etaPFMet);
   fChain->SetBranchAddress("phiPFMet", phiPFMet, &b_phiPFMet);
   fChain->SetBranchAddress("pxPFMet", pxPFMet, &b_pxPFMet);
   fChain->SetBranchAddress("pyPFMet", pyPFMet, &b_pyPFMet);
   fChain->SetBranchAddress("pzPFMet", pzPFMet, &b_pzPFMet);
   fChain->SetBranchAddress("vertexXPFMet", vertexXPFMet, &b_vertexXPFMet);
   fChain->SetBranchAddress("vertexYPFMet", vertexYPFMet, &b_vertexYPFMet);
   fChain->SetBranchAddress("vertexZPFMet", vertexZPFMet, &b_vertexZPFMet);
   fChain->SetBranchAddress("massPFMet", massPFMet, &b_massPFMet);
   fChain->SetBranchAddress("mtPFMet", mtPFMet, &b_mtPFMet);
   fChain->SetBranchAddress("pdgIdPFMet", pdgIdPFMet, &b_pdgIdPFMet);
   fChain->SetBranchAddress("nDauPFMet", nDauPFMet, &b_nDauPFMet);
   fChain->SetBranchAddress("d1IndexPFMet", d1IndexPFMet, &b_d1IndexPFMet);
   fChain->SetBranchAddress("d2IndexPFMet", d2IndexPFMet, &b_d2IndexPFMet);
   fChain->SetBranchAddress("d1pdgIdPFMet", d1pdgIdPFMet, &b_d1pdgIdPFMet);
   fChain->SetBranchAddress("d2pdgIdPFMet", d2pdgIdPFMet, &b_d2pdgIdPFMet);
   fChain->SetBranchAddress("nGenMet", &nGenMet, &b_nGenMet);
   fChain->SetBranchAddress("chargeGenMet", chargeGenMet, &b_chargeGenMet);
   fChain->SetBranchAddress("energyGenMet", energyGenMet, &b_energyGenMet);
   fChain->SetBranchAddress("etGenMet", etGenMet, &b_etGenMet);
   fChain->SetBranchAddress("momentumGenMet", momentumGenMet, &b_momentumGenMet);
   fChain->SetBranchAddress("thetaGenMet", thetaGenMet, &b_thetaGenMet);
   fChain->SetBranchAddress("etaGenMet", etaGenMet, &b_etaGenMet);
   fChain->SetBranchAddress("phiGenMet", phiGenMet, &b_phiGenMet);
   fChain->SetBranchAddress("pxGenMet", pxGenMet, &b_pxGenMet);
   fChain->SetBranchAddress("pyGenMet", pyGenMet, &b_pyGenMet);
   fChain->SetBranchAddress("pzGenMet", pzGenMet, &b_pzGenMet);
   fChain->SetBranchAddress("vertexXGenMet", vertexXGenMet, &b_vertexXGenMet);
   fChain->SetBranchAddress("vertexYGenMet", vertexYGenMet, &b_vertexYGenMet);
   fChain->SetBranchAddress("vertexZGenMet", vertexZGenMet, &b_vertexZGenMet);
   fChain->SetBranchAddress("massGenMet", massGenMet, &b_massGenMet);
   fChain->SetBranchAddress("mtGenMet", mtGenMet, &b_mtGenMet);
   fChain->SetBranchAddress("pdgIdGenMet", pdgIdGenMet, &b_pdgIdGenMet);
   fChain->SetBranchAddress("nDauGenMet", nDauGenMet, &b_nDauGenMet);
   fChain->SetBranchAddress("d1IndexGenMet", d1IndexGenMet, &b_d1IndexGenMet);
   fChain->SetBranchAddress("d2IndexGenMet", d2IndexGenMet, &b_d2IndexGenMet);
   fChain->SetBranchAddress("d1pdgIdGenMet", d1pdgIdGenMet, &b_d1pdgIdGenMet);
   fChain->SetBranchAddress("d2pdgIdGenMet", d2pdgIdGenMet, &b_d2pdgIdGenMet);
   fChain->SetBranchAddress("nSisConeCorrJet", &nSisConeCorrJet, &b_nSisConeCorrJet);
   fChain->SetBranchAddress("chargeSisConeCorrJet", chargeSisConeCorrJet, &b_chargeSisConeCorrJet);
   fChain->SetBranchAddress("energySisConeCorrJet", energySisConeCorrJet, &b_energySisConeCorrJet);
   fChain->SetBranchAddress("etSisConeCorrJet", etSisConeCorrJet, &b_etSisConeCorrJet);
   fChain->SetBranchAddress("momentumSisConeCorrJet", momentumSisConeCorrJet, &b_momentumSisConeCorrJet);
   fChain->SetBranchAddress("thetaSisConeCorrJet", thetaSisConeCorrJet, &b_thetaSisConeCorrJet);
   fChain->SetBranchAddress("etaSisConeCorrJet", etaSisConeCorrJet, &b_etaSisConeCorrJet);
   fChain->SetBranchAddress("phiSisConeCorrJet", phiSisConeCorrJet, &b_phiSisConeCorrJet);
   fChain->SetBranchAddress("pxSisConeCorrJet", pxSisConeCorrJet, &b_pxSisConeCorrJet);
   fChain->SetBranchAddress("pySisConeCorrJet", pySisConeCorrJet, &b_pySisConeCorrJet);
   fChain->SetBranchAddress("pzSisConeCorrJet", pzSisConeCorrJet, &b_pzSisConeCorrJet);
   fChain->SetBranchAddress("vertexXSisConeCorrJet", vertexXSisConeCorrJet, &b_vertexXSisConeCorrJet);
   fChain->SetBranchAddress("vertexYSisConeCorrJet", vertexYSisConeCorrJet, &b_vertexYSisConeCorrJet);
   fChain->SetBranchAddress("vertexZSisConeCorrJet", vertexZSisConeCorrJet, &b_vertexZSisConeCorrJet);
   fChain->SetBranchAddress("massSisConeCorrJet", massSisConeCorrJet, &b_massSisConeCorrJet);
   fChain->SetBranchAddress("mtSisConeCorrJet", mtSisConeCorrJet, &b_mtSisConeCorrJet);
   fChain->SetBranchAddress("pdgIdSisConeCorrJet", pdgIdSisConeCorrJet, &b_pdgIdSisConeCorrJet);
   fChain->SetBranchAddress("nDauSisConeCorrJet", nDauSisConeCorrJet, &b_nDauSisConeCorrJet);
   fChain->SetBranchAddress("d1IndexSisConeCorrJet", d1IndexSisConeCorrJet, &b_d1IndexSisConeCorrJet);
   fChain->SetBranchAddress("d2IndexSisConeCorrJet", d2IndexSisConeCorrJet, &b_d2IndexSisConeCorrJet);
   fChain->SetBranchAddress("d1pdgIdSisConeCorrJet", d1pdgIdSisConeCorrJet, &b_d1pdgIdSisConeCorrJet);
   fChain->SetBranchAddress("d2pdgIdSisConeCorrJet", d2pdgIdSisConeCorrJet, &b_d2pdgIdSisConeCorrJet);
   fChain->SetBranchAddress("alphaSisConeCorrJet", alphaSisConeCorrJet, &b_alphaSisConeCorrJet);
   fChain->SetBranchAddress("emFracSisConeCorrJet", emFracSisConeCorrJet, &b_emFracSisConeCorrJet);
   fChain->SetBranchAddress("hadFracSisConeCorrJet", hadFracSisConeCorrJet, &b_hadFracSisConeCorrJet);
   fChain->SetBranchAddress("nSisConeJet", &nSisConeJet, &b_nSisConeJet);
   fChain->SetBranchAddress("chargeSisConeJet", chargeSisConeJet, &b_chargeSisConeJet);
   fChain->SetBranchAddress("energySisConeJet", energySisConeJet, &b_energySisConeJet);
   fChain->SetBranchAddress("etSisConeJet", etSisConeJet, &b_etSisConeJet);
   fChain->SetBranchAddress("momentumSisConeJet", momentumSisConeJet, &b_momentumSisConeJet);
   fChain->SetBranchAddress("thetaSisConeJet", thetaSisConeJet, &b_thetaSisConeJet);
   fChain->SetBranchAddress("etaSisConeJet", etaSisConeJet, &b_etaSisConeJet);
   fChain->SetBranchAddress("phiSisConeJet", phiSisConeJet, &b_phiSisConeJet);
   fChain->SetBranchAddress("pxSisConeJet", pxSisConeJet, &b_pxSisConeJet);
   fChain->SetBranchAddress("pySisConeJet", pySisConeJet, &b_pySisConeJet);
   fChain->SetBranchAddress("pzSisConeJet", pzSisConeJet, &b_pzSisConeJet);
   fChain->SetBranchAddress("vertexXSisConeJet", vertexXSisConeJet, &b_vertexXSisConeJet);
   fChain->SetBranchAddress("vertexYSisConeJet", vertexYSisConeJet, &b_vertexYSisConeJet);
   fChain->SetBranchAddress("vertexZSisConeJet", vertexZSisConeJet, &b_vertexZSisConeJet);
   fChain->SetBranchAddress("massSisConeJet", massSisConeJet, &b_massSisConeJet);
   fChain->SetBranchAddress("mtSisConeJet", mtSisConeJet, &b_mtSisConeJet);
   fChain->SetBranchAddress("pdgIdSisConeJet", pdgIdSisConeJet, &b_pdgIdSisConeJet);
   fChain->SetBranchAddress("nDauSisConeJet", nDauSisConeJet, &b_nDauSisConeJet);
   fChain->SetBranchAddress("d1IndexSisConeJet", d1IndexSisConeJet, &b_d1IndexSisConeJet);
   fChain->SetBranchAddress("d2IndexSisConeJet", d2IndexSisConeJet, &b_d2IndexSisConeJet);
   fChain->SetBranchAddress("d1pdgIdSisConeJet", d1pdgIdSisConeJet, &b_d1pdgIdSisConeJet);
   fChain->SetBranchAddress("d2pdgIdSisConeJet", d2pdgIdSisConeJet, &b_d2pdgIdSisConeJet);
   fChain->SetBranchAddress("alphaSisConeJet", alphaSisConeJet, &b_alphaSisConeJet);
   fChain->SetBranchAddress("emFracSisConeJet", emFracSisConeJet, &b_emFracSisConeJet);
   fChain->SetBranchAddress("hadFracSisConeJet", hadFracSisConeJet, &b_hadFracSisConeJet);
   fChain->SetBranchAddress("nSisConePFJet", &nSisConePFJet, &b_nSisConePFJet);
   fChain->SetBranchAddress("chargeSisConePFJet", chargeSisConePFJet, &b_chargeSisConePFJet);
   fChain->SetBranchAddress("energySisConePFJet", energySisConePFJet, &b_energySisConePFJet);
   fChain->SetBranchAddress("etSisConePFJet", etSisConePFJet, &b_etSisConePFJet);
   fChain->SetBranchAddress("momentumSisConePFJet", momentumSisConePFJet, &b_momentumSisConePFJet);
   fChain->SetBranchAddress("thetaSisConePFJet", thetaSisConePFJet, &b_thetaSisConePFJet);
   fChain->SetBranchAddress("etaSisConePFJet", etaSisConePFJet, &b_etaSisConePFJet);
   fChain->SetBranchAddress("phiSisConePFJet", phiSisConePFJet, &b_phiSisConePFJet);
   fChain->SetBranchAddress("pxSisConePFJet", pxSisConePFJet, &b_pxSisConePFJet);
   fChain->SetBranchAddress("pySisConePFJet", pySisConePFJet, &b_pySisConePFJet);
   fChain->SetBranchAddress("pzSisConePFJet", pzSisConePFJet, &b_pzSisConePFJet);
   fChain->SetBranchAddress("vertexXSisConePFJet", vertexXSisConePFJet, &b_vertexXSisConePFJet);
   fChain->SetBranchAddress("vertexYSisConePFJet", vertexYSisConePFJet, &b_vertexYSisConePFJet);
   fChain->SetBranchAddress("vertexZSisConePFJet", vertexZSisConePFJet, &b_vertexZSisConePFJet);
   fChain->SetBranchAddress("massSisConePFJet", massSisConePFJet, &b_massSisConePFJet);
   fChain->SetBranchAddress("mtSisConePFJet", mtSisConePFJet, &b_mtSisConePFJet);
   fChain->SetBranchAddress("pdgIdSisConePFJet", pdgIdSisConePFJet, &b_pdgIdSisConePFJet);
   fChain->SetBranchAddress("nDauSisConePFJet", nDauSisConePFJet, &b_nDauSisConePFJet);
   fChain->SetBranchAddress("d1IndexSisConePFJet", d1IndexSisConePFJet, &b_d1IndexSisConePFJet);
   fChain->SetBranchAddress("d2IndexSisConePFJet", d2IndexSisConePFJet, &b_d2IndexSisConePFJet);
   fChain->SetBranchAddress("d1pdgIdSisConePFJet", d1pdgIdSisConePFJet, &b_d1pdgIdSisConePFJet);
   fChain->SetBranchAddress("d2pdgIdSisConePFJet", d2pdgIdSisConePFJet, &b_d2pdgIdSisConePFJet);
   fChain->SetBranchAddress("chargedHadronEnergySisConePFJet", chargedHadronEnergySisConePFJet, &b_chargedHadronEnergySisConePFJet);
   fChain->SetBranchAddress("neutralHadronEnergySisConePFJet", neutralHadronEnergySisConePFJet, &b_neutralHadronEnergySisConePFJet);
   fChain->SetBranchAddress("chargedEmEnergySisConePFJet", chargedEmEnergySisConePFJet, &b_chargedEmEnergySisConePFJet);
   fChain->SetBranchAddress("neutralEmEnergySisConePFJet", neutralEmEnergySisConePFJet, &b_neutralEmEnergySisConePFJet);
   fChain->SetBranchAddress("neutralMultiplicitySisConePFJet", neutralMultiplicitySisConePFJet, &b_neutralMultiplicitySisConePFJet);
   fChain->SetBranchAddress("chargedMultiplicitySisConePFJet", chargedMultiplicitySisConePFJet, &b_chargedMultiplicitySisConePFJet);
   fChain->SetBranchAddress("muonMultiplicitySisConePFJet", muonMultiplicitySisConePFJet, &b_muonMultiplicitySisConePFJet);
   fChain->SetBranchAddress("nSisConePFCorrJet", &nSisConePFCorrJet, &b_nSisConePFCorrJet);
   fChain->SetBranchAddress("chargeSisConePFCorrJet", chargeSisConePFCorrJet, &b_chargeSisConePFCorrJet);
   fChain->SetBranchAddress("energySisConePFCorrJet", energySisConePFCorrJet, &b_energySisConePFCorrJet);
   fChain->SetBranchAddress("etSisConePFCorrJet", etSisConePFCorrJet, &b_etSisConePFCorrJet);
   fChain->SetBranchAddress("momentumSisConePFCorrJet", momentumSisConePFCorrJet, &b_momentumSisConePFCorrJet);
   fChain->SetBranchAddress("thetaSisConePFCorrJet", thetaSisConePFCorrJet, &b_thetaSisConePFCorrJet);
   fChain->SetBranchAddress("etaSisConePFCorrJet", etaSisConePFCorrJet, &b_etaSisConePFCorrJet);
   fChain->SetBranchAddress("phiSisConePFCorrJet", phiSisConePFCorrJet, &b_phiSisConePFCorrJet);
   fChain->SetBranchAddress("pxSisConePFCorrJet", pxSisConePFCorrJet, &b_pxSisConePFCorrJet);
   fChain->SetBranchAddress("pySisConePFCorrJet", pySisConePFCorrJet, &b_pySisConePFCorrJet);
   fChain->SetBranchAddress("pzSisConePFCorrJet", pzSisConePFCorrJet, &b_pzSisConePFCorrJet);
   fChain->SetBranchAddress("vertexXSisConePFCorrJet", vertexXSisConePFCorrJet, &b_vertexXSisConePFCorrJet);
   fChain->SetBranchAddress("vertexYSisConePFCorrJet", vertexYSisConePFCorrJet, &b_vertexYSisConePFCorrJet);
   fChain->SetBranchAddress("vertexZSisConePFCorrJet", vertexZSisConePFCorrJet, &b_vertexZSisConePFCorrJet);
   fChain->SetBranchAddress("massSisConePFCorrJet", massSisConePFCorrJet, &b_massSisConePFCorrJet);
   fChain->SetBranchAddress("mtSisConePFCorrJet", mtSisConePFCorrJet, &b_mtSisConePFCorrJet);
   fChain->SetBranchAddress("pdgIdSisConePFCorrJet", pdgIdSisConePFCorrJet, &b_pdgIdSisConePFCorrJet);
   fChain->SetBranchAddress("nDauSisConePFCorrJet", nDauSisConePFCorrJet, &b_nDauSisConePFCorrJet);
   fChain->SetBranchAddress("d1IndexSisConePFCorrJet", d1IndexSisConePFCorrJet, &b_d1IndexSisConePFCorrJet);
   fChain->SetBranchAddress("d2IndexSisConePFCorrJet", d2IndexSisConePFCorrJet, &b_d2IndexSisConePFCorrJet);
   fChain->SetBranchAddress("d1pdgIdSisConePFCorrJet", d1pdgIdSisConePFCorrJet, &b_d1pdgIdSisConePFCorrJet);
   fChain->SetBranchAddress("d2pdgIdSisConePFCorrJet", d2pdgIdSisConePFCorrJet, &b_d2pdgIdSisConePFCorrJet);
   fChain->SetBranchAddress("chargedHadronEnergySisConePFCorrJet", chargedHadronEnergySisConePFCorrJet, &b_chargedHadronEnergySisConePFCorrJet);
   fChain->SetBranchAddress("neutralHadronEnergySisConePFCorrJet", neutralHadronEnergySisConePFCorrJet, &b_neutralHadronEnergySisConePFCorrJet);
   fChain->SetBranchAddress("chargedEmEnergySisConePFCorrJet", chargedEmEnergySisConePFCorrJet, &b_chargedEmEnergySisConePFCorrJet);
   fChain->SetBranchAddress("neutralEmEnergySisConePFCorrJet", neutralEmEnergySisConePFCorrJet, &b_neutralEmEnergySisConePFCorrJet);
   fChain->SetBranchAddress("neutralMultiplicitySisConePFCorrJet", neutralMultiplicitySisConePFCorrJet, &b_neutralMultiplicitySisConePFCorrJet);
   fChain->SetBranchAddress("chargedMultiplicitySisConePFCorrJet", chargedMultiplicitySisConePFCorrJet, &b_chargedMultiplicitySisConePFCorrJet);
   fChain->SetBranchAddress("muonMultiplicitySisConePFCorrJet", muonMultiplicitySisConePFCorrJet, &b_muonMultiplicitySisConePFCorrJet);
   fChain->SetBranchAddress("nSisConeGenJet", &nSisConeGenJet, &b_nSisConeGenJet);
   fChain->SetBranchAddress("chargeSisConeGenJet", chargeSisConeGenJet, &b_chargeSisConeGenJet);
   fChain->SetBranchAddress("energySisConeGenJet", energySisConeGenJet, &b_energySisConeGenJet);
   fChain->SetBranchAddress("etSisConeGenJet", etSisConeGenJet, &b_etSisConeGenJet);
   fChain->SetBranchAddress("momentumSisConeGenJet", momentumSisConeGenJet, &b_momentumSisConeGenJet);
   fChain->SetBranchAddress("thetaSisConeGenJet", thetaSisConeGenJet, &b_thetaSisConeGenJet);
   fChain->SetBranchAddress("etaSisConeGenJet", etaSisConeGenJet, &b_etaSisConeGenJet);
   fChain->SetBranchAddress("phiSisConeGenJet", phiSisConeGenJet, &b_phiSisConeGenJet);
   fChain->SetBranchAddress("pxSisConeGenJet", pxSisConeGenJet, &b_pxSisConeGenJet);
   fChain->SetBranchAddress("pySisConeGenJet", pySisConeGenJet, &b_pySisConeGenJet);
   fChain->SetBranchAddress("pzSisConeGenJet", pzSisConeGenJet, &b_pzSisConeGenJet);
   fChain->SetBranchAddress("vertexXSisConeGenJet", vertexXSisConeGenJet, &b_vertexXSisConeGenJet);
   fChain->SetBranchAddress("vertexYSisConeGenJet", vertexYSisConeGenJet, &b_vertexYSisConeGenJet);
   fChain->SetBranchAddress("vertexZSisConeGenJet", vertexZSisConeGenJet, &b_vertexZSisConeGenJet);
   fChain->SetBranchAddress("massSisConeGenJet", massSisConeGenJet, &b_massSisConeGenJet);
   fChain->SetBranchAddress("mtSisConeGenJet", mtSisConeGenJet, &b_mtSisConeGenJet);
   fChain->SetBranchAddress("pdgIdSisConeGenJet", pdgIdSisConeGenJet, &b_pdgIdSisConeGenJet);
   fChain->SetBranchAddress("nDauSisConeGenJet", nDauSisConeGenJet, &b_nDauSisConeGenJet);
   fChain->SetBranchAddress("d1IndexSisConeGenJet", d1IndexSisConeGenJet, &b_d1IndexSisConeGenJet);
   fChain->SetBranchAddress("d2IndexSisConeGenJet", d2IndexSisConeGenJet, &b_d2IndexSisConeGenJet);
   fChain->SetBranchAddress("d1pdgIdSisConeGenJet", d1pdgIdSisConeGenJet, &b_d1pdgIdSisConeGenJet);
   fChain->SetBranchAddress("d2pdgIdSisConeGenJet", d2pdgIdSisConeGenJet, &b_d2pdgIdSisConeGenJet);
   Notify();
}

Bool_t HiggsBase::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return kTRUE;
}

void HiggsBase::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t HiggsBase::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef HiggsBase_cxx
